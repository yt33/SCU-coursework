// for EX/WB buffer, we have 14 inputs and 13 outputs
module buffer3(

clk, 
N,
Z,
regwrt,
memtoreg,
pctoreg, 
brch_n,
brch_z,
jump,
jumpmem,
alu,
data,
rd,
sign,

N_out,
Z_out,
regwrt_out,
memtoreg_out,
pctoreg_out,
brch_n_out,
brch_z_out,
jump_out,
jumpmem_out,
alu_out,
data_out,
rd_out,
sign_out
    );
    
input clk;
input N;
output reg N_out;
input Z;
output reg Z_out;
input regwrt;
output reg regwrt_out;
input memtoreg;
output reg memtoreg_out;
input pctoreg;
output reg pctoreg_out;
input brch_n;
output reg brch_n_out;
input brch_z;
output reg brch_z_out;
input jump;
output reg jump_out;
input jumpmem;
output reg jumpmem_out;
input [31:0] alu;
output reg [31:0] alu_out;
input [31:0] data;
output reg [31:0] data_out;
input [31:0] rd;
output reg [31:0] rd_out;
input [31:0] sign;
output reg [31:0] sign_out;


always @ (posedge clk)
begin
    N_out = N;
    Z_out = Z;
    regwrt_out = regwrt;
    memtoreg_out = memtoreg;
    pctoreg_out = pctoreg;
    brch_n_out = brch_n;
    brch_z_out = brch_z;
    jump_out = jump;
    jumpmem_out = jumpmem;
    alu_out = alu;
    data_out = data;
    rd_out = rd;
    sign_out = sign;
    
end

endmodule