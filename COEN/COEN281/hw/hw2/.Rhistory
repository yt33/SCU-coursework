file <- read.table("data/az500.txt", header = FALSE)
file <- read.table("data/az-5000.txt", header = FALSE)
file <- read.table("data/az-5000.txt", header = FALSE)
rownames(char) = file[,1]
file <- read.table("data/az-5000.txt", header = FALSE)
rownames(char) = char[,1]
file <- read.table("data/az-5000.txt", header = FALSE)
rownames(charn) = file[,1]
file <- read.table("data/az-5000.txt", header = FALSE)
rownames(file) = file[,1]
file <- read.table("data/az-5000.txt", header = FALSE)
head(file, 1)
file <- read.table("data/az-5000.txt", header = FALSE)
file[1:6]
file <- read.table("data/az-5000.txt", header = FALSE)
file[1]
file <- read.table("data/az-5000.txt", header = FALSE)
file[2]
file <- read.table("data/az-5000.txt", header = FALSE)
file[1:6]
file <- read.table("data/az-5000.txt", header = TRUE)
file[1:6]
housing_data <- read.csv("housetype_data.txt", header=TRUE)
data <- read.csv("az-5000.txt", header=TRUE)
xy=read.table("az-5000.txt",header=TRUE)    #read data
xy=read.table("az-5000.txt",header=TRUE)    #read data
xy=read.table("az-5000.txt",header=TRUE)    #read data
read.table("az-5000.txt",header=TRUE)    #read data
#read data
data = read.table(az-5000.txt)
data = read.table(az-5000.txt);
data = read.table("az-5000.txt"");
data = read.table("az-5000.txt"")
data = read.table("az-5000.txt"")
data = read.table("az-5000.txt")
data <- read.table("az-5000.txt")
data <- read.table("data/az-5000.txt")
data <- read.table("data/az-5000.txt", header = TRUE)
data <- read.table("data/az-5000.txt", header = TRUE)
set.seed(1)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(1)
sampleline=sample(nrow(xy),4000)
sampledata=xy[sampleline,]
xy <- read.table("data/az-5000.txt", header = TRUE)  # read data
set.seed(1)
sampleline=sample(nrow(xy),4000)
sampledata=xy[sampleline,]  #take the training data out
xy <- read.table("data/az-5000.txt", header = TRUE)  # read data
set.seed(1)
sampleline=sample(nrow(xy),5000)
sampledata=xy[sampleline,]  #take the training data out
sampleline
xy <- read.table("data/az-5000.txt", header = TRUE)  # read data
set.seed(1)
sampleline=sample(nrow(xy),5000)
sampledata=xy[sampleline,]  #take the training data out
sampleline(1)
xy <- read.table("data/az-5000.txt", header = TRUE)  # read data
set.seed(1)
sampleline=sample(nrow(xy),5000)
sampledata=xy[sampleline,]  #take the training data out
sample(1)
xy <- read.table("data/az-5000.txt", header = TRUE)  # read data
set.seed(1)
sampleline=sample(nrow(xy),5000)
sampledata=xy[sampleline,]  #take the training data out
sample(5000)
xy <- read.table("data/az-5000.txt", header = TRUE)  # read data
head(xy)
xy <- read.table("data/az-5000.txt", header = TRUE)  # read data
head(xy, 1)
xy <- read.table("data/az-5000.txt", header = TRUE)  # read data
head(xy, 1)
tail(xy, 1)
chartonum=as.numeric(sampledata$char)   #convert the char column to an integer
ctonM=as.matrix(chartonum)
binaryM=matrix(0,nrow=nrow(ctonM),ncol=26)    #get the zero matrix
for(i in 1:4000)        #fill the zero matrix with 1 in suitable position to get binary Matrix
{a=chartonum[i]
binaryM[i,a]=1}
sum(binaryM==1)    #check the result by counting the number of 1
chartonum=as.numeric(sampledata$char)   #convert the char column to an integer
ctonM=as.matrix(chartonum)
binaryM=matrix(0,nrow=nrow(ctonM),ncol=26)    #get the zero matrix
for(i in 1:4000)        #fill the zero matrix with 1 in suitable position to get binary Matrix
{a=chartonum[i]
binaryM[i,a]=1}
sum(binaryM==1)    #check the result by counting the number of 1
data(ab)
smp_size <- floor(0.8 * nrow(ab))
data(xy)
smp_size <- floor(0.8 * nrow(xy))
data()
smp_size <- floor(0.8 * nrow(xy))
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.75*nrow(xy)), replace = F)
train <- xy[sample, ]
test  <- xy[-sample, ]
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample = sample.split(data$anycolumn, SplitRatio = .75)
require(caTools)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample = sample.split(data$anycolumn, SplitRatio = .75)
require(caTools)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample = sample.split(data$anycolumn, SplitRatio = 0.75)
require(caTools)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample = sample.split(data$anycolumn, SplitRatio = 0.8)
require(caTools)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample = sample.split(data$anycolumn, SplitRatio = 0)
require(caTools)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample = sample.split(data$anycolumn, SplitRatio = i[0.8])
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
summary(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
head(xy, 1)
tail(xy, 1)
summary(xy)
xy <- read.table("data/az-5000.txt", header = TRUE)
head(xy, 1)
tail(xy, 1)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
table()
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
table(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
head(xy, 1)
tail(xy, 1)
table(head)
xy <- read.table("data/az-5000.txt", header = TRUE)
head(xy, 1)
tail(xy, 1)
table(xy)
xy <- read.table("data/az-5000.txt", header = TRUE)
head(xy, 1)
tail(xy, 1)
table(head)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
table(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample(xy)
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
table(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample(xy)
table(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
table(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
train <- xy[sample, ]
test  <- data[-sample, ]
xy <- read.table("data/az-5000.txt", header = TRUE)
head(xy, 1)
tail(xy, 1)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
# train <- data[sample, ]
# test  <- data[-sample, ]
table(sample)
load fisheriris
rng(12);
c()
data <- read.table("data/credit_data.txt")
data <- read.table("data/credit_data.txt")
head(data,1)
data <- read.table("data/credit_data.txt")
head(data,2)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
train <- sample(1:885, 0.8*885)
table(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
dim(xy)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
train <- sample(1:885, 0.8*885)
table(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
dim(xy)
head(xy, 1)
tail(xy, 1)
xy <- read.table("data/az-5000.txt", header = TRUE)
dim(xy)
set.seed(123)
train <- sample(1:885, 0.8*885)
table(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
dim(xy)
set.seed(123)
train <- sample(1:5000, 0.8*5000)
table(sample)
xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
# train <- data[sample, ]
# test  <- data[-sample, ]
table(sample)
data <- read.table("data/credit_data.txt")
dim(data)
set.seed(101)
train<-sample(1:885 0.8*885)
data <- read.table("data/credit_data.txt")
dim(data)
set.seed(101)
train <- sample(1:885 0.8*885)
data <- read.table("data/credit_data.txt")
dim(data)
set.seed(101)
train <- sample(1:885 .8*885)
data <- read.table("data/credit_data.txt")
dim(data)
set.seed(101)
train <- sample(1:885, 0.8*885)
data <- read.table("data/credit_data.txt")
dim(data)
set.seed(101)
train <- sample(1:885, 0.8*885)
head(train)
data <- read.table("data/credit_data.txt")
dim(data)
set.seed(101)
train <- sample(1:885, 0.8*885)
head(train,1)
data <- read.table("data/credit_data.txt")
dim(data)
set.seed(101)
train <- sample(1:885, 0.8*885)
head(train)
data <- read.table("data/credit_data.txt")
dim(data)
set.seed(101)
#selecting 80% of data as training data
train <- sample(1:885, 0.8*885)
#showing the number of cases per class for both training and test data
table(credit.xy$Fail[train])
data <- read.table("data/credit_data.txt")
dim(data)
set.seed(101)
#selecting 80% of data as training data
train <- sample(1:885, 0.8*885)
#showing the number of cases per class for both training and test data
table(data$Fail[train])
table(data$Fail[-train])
#fitting logistic regression to training data and creating summary data
credit.glm <- glm(Fail~.-Id, family = binomial, data = credit.xy[train,])
xy <- read.table("data/az-5000.txt", header = TRUE)
head(xy, 1)
tail(xy, 1)
# xy <- read.table("data/az-5000.txt", header = TRUE)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
# train <- data[sample, ]
# test  <- data[-sample, ]
table(sample)
#fitting logistic regression to training data and creating summary data
credit.glm <- glm(Fail~.-Id, family = binomial, data = data[train,])
index <- read.table("data/credit_data.txt")
dim(indexd)
index <- read.table("data/credit_data.txt")
dim(index)
set.seed(101)
#selecting 80% of data as training data
train <- sample(1:885, 0.8*885)
#showing the number of cases per class for both training and test data
table(index$Fail[train])
table(index$Fail[-train])
#fitting logistic regression to training data and creating summary data
index.glm <- glm(Fail~.-Id, family = binomial, data = index[train,])
#loading credit data
credit.xy <- read.table("credit_data.txt", header = TRUE)
#loading credit data
credit.xy <- read.table("data/credit_data.txt", header = TRUE)
dim(credit.xy)
set.seed(123)
#selecting 80% of data as training data
train <- sample(1:885, 0.8*885)
#showing the number of cases per class for both training and test data
table(credit.xy$Fail[train])
table(credit.xy$Fail[-train])
#fitting logistic regression to training data and creating summary data
credit.glm <- glm(Fail~.-Id, family = binomial, data = credit.xy[train,])
summary(credit.glm)
#predicting if a firm will go bankrupt if the predicted probability is
#P(Y=1|X=x) of bankruptcy is 0.5 or greater and creating a confusion matrix
yHat <- predict(credit.glm , credit.xy[-train, c(1,3:15)], type = "response")
table(credit.xy$Fail[-train], yHat >= 0.5)
set.seed(1)
y = rnorm(100)
x = rnorm(100)
y = x - 2*x^2 + rnorm(100)
set.seed(1)
y = rnorm(100)
x = rnorm(100)
y = x - 2*x^2 + rnorm(100)
plot(x, y)
#(a)
set.seed(1)
y = rnorm(100)
x = rnorm(100)
y = x - 2*x^2 + rnorm(100)
#(b)
plot(x, y)
#(c)
#i.
library(boot)
set.seed(1)
Data <- data.frame(x, y)
fit.glm.1 <- glm(y ~ x)
cv.glm(Data, fit.glm.1)$delta[1]
#(a)
set.seed(1)
y = rnorm(100)
x = rnorm(100)
y = x - 2*x^2 + rnorm(100)
#(b)
plot(x, y)
#(c)
#i.
library(boot)
set.seed(1)
Data <- data.frame(x, y)
fit.glm.1 <- glm(y ~ x)
cv.glm(Data, fit.glm.1)$delta[1]
#ii.
fit.glm.2 <- glm(y ~ poly(x, 2))
cv.glm(Data, fit.glm.2)$delta[1]
#iii.
fit.glm.3 <- glm(y ~ poly(x, 3))
cv.glm(Data, fit.glm.3)$delta[1]
#iv.
fit.glm.4 <- glm(y ~ poly(x, 4))
cv.glm(Data, fit.glm.4)$delta[1]
#(b)
plot(x, y)
#(c)
#i.
library(boot)
set.seed(1)
Data <- data.frame(x, y)
fit.glm.1 <- glm(y ~ x)
cv.glm(Data, fit.glm.1)$delta[1]
#ii.
fit.glm.2 <- glm(y ~ poly(x, 2))
cv.glm(Data, fit.glm.2)$delta[1]
#iii.
fit.glm.3 <- glm(y ~ poly(x, 3))
cv.glm(Data, fit.glm.3)$delta[1]
#iv.
fit.glm.4 <- glm(y ~ poly(x, 4))
cv.glm(Data, fit.glm.4)$delta[1]
set.seed(10)
fit.glm.1 <- glm(y ~ x)
cv.glm(Data, fit.glm.1)$delta[1]
#i.
set.seed(10)
fit.glm.1 <- glm(y ~ x)
cv.glm(Data, fit.glm.1)$delta[1]
#ii.
fit.glm.2 <- glm(y ~ poly(x, 2))
cv.glm(Data, fit.glm.2)$delta[1]
#iii.
fit.glm.3 <- glm(y ~ poly(x, 3))
cv.glm(Data, fit.glm.3)$delta[1]
#iv.
fit.glm.4 <- glm(y ~ poly(x, 4))
cv.glm(Data, fit.glm.4)$delta[1]
summary(fit.glm.4)
#(a)
xy <- read.table("data/az-5000.txt", header = TRUE)
head(xy, 1)
tail(xy, 1)
#(b & c.)
set.seed(101) # Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(xy), size = floor(.8*nrow(xy)), replace = F)
# train <- data[sample, ]
# test  <- data[-sample, ]
table(sample)
#loading credit data
credit.xy <- read.table("data/credit_data.txt", header = TRUE)
dim(credit.xy)
set.seed(123)
#selecting 80% of data as training data
train <- sample(1:885, 0.8*885)
#showing the number of cases per class for both training and test data
table(credit.xy$Fail[train])
table(credit.xy$Fail[-train])
#(a)
#fitting logistic regression to training data and creating summary data
credit.glm <- glm(Fail~.-Id, family = binomial, data = credit.xy[train,])
summary(credit.glm)
#predicting if a firm will go bankrupt if the predicted probability is
#P(Y=1|X=x) of bankruptcy is 0.5 or greater and creating a confusion matrix
yHat <- predict(credit.glm , credit.xy[-train, c(1,3:15)], type = "response")
table(credit.xy$Fail[-train], yHat >= 0.5)
#(a)
set.seed(1)
y = rnorm(100)
x = rnorm(100)
y = x - 2*x^2 + rnorm(100)
#(b)
plot(x, y)
#(c)
#i.
library(boot)
set.seed(1)
Data <- data.frame(x, y)
fit.glm.1 <- glm(y ~ x)
cv.glm(Data, fit.glm.1)$delta[1]
#ii.
fit.glm.2 <- glm(y ~ poly(x, 2))
cv.glm(Data, fit.glm.2)$delta[1]
#iii.
fit.glm.3 <- glm(y ~ poly(x, 3))
cv.glm(Data, fit.glm.3)$delta[1]
#iv.
fit.glm.4 <- glm(y ~ poly(x, 4))
cv.glm(Data, fit.glm.4)$delta[1]
#(d)
#i.
set.seed(10)
fit.glm.1 <- glm(y ~ x)
cv.glm(Data, fit.glm.1)$delta[1]
#ii.
fit.glm.2 <- glm(y ~ poly(x, 2))
cv.glm(Data, fit.glm.2)$delta[1]
#iii.
fit.glm.3 <- glm(y ~ poly(x, 3))
cv.glm(Data, fit.glm.3)$delta[1]
#iv.
fit.glm.4 <- glm(y ~ poly(x, 4))
cv.glm(Data, fit.glm.4)$delta[1]
summary(fit.glm.4)
char.priors <- c(rep(1/26, 26))
#loading credit data
credit.xy <- read.table("data/credit_data.txt", header = TRUE)
dim(credit.xy)
set.seed(123)
#selecting 80% of data as training data
train <- sample(1:885, 0.8*885)
#showing the number of cases per class for both training and test data
table(credit.xy$Fail[train])
table(credit.xy$Fail[-train])
#(a)
#fitting logistic regression to training data and creating summary data
credit.glm <- glm(Fail~.-Id, family = binomial, data = credit.xy[train,])
summary(credit.glm)
#predicting if a firm will go bankrupt if the predicted probability is
#P(Y=1|X=x) of bankruptcy is 0.5 or greater and creating a confusion matrix
yHat <- predict(credit.glm , credit.xy[-train, c(1,3:15)], type = "response")
table(credit.xy$Fail[-train], yHat >= 0.5)
