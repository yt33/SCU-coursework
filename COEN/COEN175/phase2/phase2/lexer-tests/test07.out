keyword:struct
identifier:foo
operator:{
keyword:int
identifier:x
operator:,
identifier:y
operator:;
operator:}
operator:*
identifier:fp
operator:;
keyword:struct
identifier:foo
operator:*
identifier:foo
operator:(
keyword:void
operator:)
operator:{
keyword:int
identifier:x
operator:,
identifier:z
operator:;
keyword:const
keyword:int
identifier:y
operator:;
identifier:x
operator:=
identifier:y
operator:||
identifier:z
operator:-
identifier:x
operator:/
identifier:y
operator:+
identifier:z
operator:%
identifier:y
operator:+
identifier:fp
operator:->
identifier:x
operator:+
identifier:fp
operator:->
identifier:y
operator:;
keyword:if
operator:(
identifier:x
operator:==
identifier:y
operator:||
identifier:z
operator:>=
integer:3
operator:&&
identifier:x
operator:!=
identifier:y
operator:)
keyword:return
operator:(
keyword:struct
identifier:foo
operator:*
operator:)
operator:(
keyword:long
operator:)
identifier:x
operator:;
operator:}
keyword:int
identifier:main
operator:(
keyword:void
operator:)
operator:{
keyword:int
identifier:x
operator:,
identifier:y
operator:,
identifier:z
operator:;
keyword:unsigned
operator:*
identifier:_a1_2_A_B_
operator:[
integer:10
operator:]
operator:;
keyword:switch
operator:(
integer:0
operator:)
operator:{
keyword:case
integer:10
operator::
keyword:default
operator::
keyword:break
operator:;
operator:}
keyword:do
operator:{
identifier:x
operator:++
operator:-
operator:--
identifier:z
operator:;
keyword:continue
operator:;
operator:}
keyword:while
operator:(
integer:1
operator:||
integer:0
operator:)
operator:;
operator:}
